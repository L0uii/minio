name: CI
on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest

        env:
            FLUTTER_VERSION: 3.3.3
        steps:
            - name: Check out repository code
              uses: actions/checkout@v3

            - name: Install XDG User Directories
              run: yum install xdg-user-dirs -y

            - name: Install SQLite
              run: |
                  yum install sqlite -y
                  yum install sqlite-devel -y

            - name: Install Flutter
              run: |
                  FLUTTER_RUNNER_TOOL_CACHE=${RUNNER_TOOL_CACHE}/${FLUTTER_VERSION}

                  if [ ! -d "${FLUTTER_RUNNER_TOOL_CACHE}" ]; then

                  	echo "Installing Flutter SDK"

                    echo "Installing XZ - LZMA compression utilities"
                    
                  	echo "Downloading release file"

                    wget -P /tmp -q --show-progress --progress=bar:force:noscroll https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz

                    mkdir -p "${FLUTTER_RUNNER_TOOL_CACHE}"

                    echo "Extracting compressed downloaded file"

                    tar -C "${FLUTTER_RUNNER_TOOL_CACHE}" -xf /tmp/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz > /dev/null

                    if [ $? -ne 0 ]; then
                        echo -e "::error::Flutter SDK download failed."

                        rm -Rf "${FLUTTER_RUNNER_TOOL_CACHE}"
                        exit 1
                    fi

                  else
                  	echo "Flutter SDK found in cache. The cached SDK is going to be used."
                  fi

                  # Configure pub to use a fixed location.
                  echo "PUB_CACHE=${FLUTTER_RUNNER_TOOL_CACHE}/.pub-cache" >> $GITHUB_ENV

                  # Update paths.
                  echo "${FLUTTER_RUNNER_TOOL_CACHE}/.pub-cache/bin" >> $GITHUB_PATH
                  echo "${FLUTTER_RUNNER_TOOL_CACHE}/flutter/bin" >> $GITHUB_PATH

            - name: Create .env file
              run: echo "APP_ENV=test" > .env

            - name: Create app configuration file
              run: |
                   echo "
                   api:
                     networkProtocol: 'http'
                     baseUrl: 'test'
                   " > assets/config/config_test.yaml

            - name: Run code formatting check
              run: make flutter_format_dryrun

            - name: Run Flutter tests
              run: make flutter_test
